sudo: required
dist: bionic
language: cpp
#cache: ccache


addons:
  apt:
    packages:
      # build tools
      - build-essential
      - cmake
      # libraries
      - libace-dev
      - libboost-dev
      - libeigen3-dev
      - libgsl0-dev
      - libtinyxml-dev
      - liborocos-kdl-dev
      - libconsole-bridge-dev
      - liburdfdom-headers-dev
      - liburdfdom-dev 

env:
  global:
    - URDF_PARSER_PY_REPOSITORY_URL="https://github.com/ros/urdf_parser_py.git"
    - SIMMECHANICS_TO_URDF_REPOSITORY_URL="https://github.com/robotology/simmechanics-to-urdf.git"
    - DEPLOYMENT_REPOSITORY_TOKEN="github.com/robotology/icub-models.git"
    - TRIGGERING_BRANCH_VALID_FOR_DEPLOYMENT="master"
    - TRIGGERING_REPOSITORY_URL_VALID_FOR_DEPLOYMENT="https://github.com/robotology/icub-model-generator.git"
    - BOT_USER_NAME="LOC2Bot"

before_script:
  - if [ "$TRAVIS_OS_NAME" == "linux" ]; then sudo apt-get update; fi 
  # Save the url of the repository and the user-name of the committ author
  - export CURRENT_REPOSITORY_URL=`git remote get-url origin`
  - COMMIT_AUTHOR="$(git --no-pager show -s --format='%an <%ae>')"
  # Start in the parent directory of icub-model-generator
  - cd ..
  - sudo apt-get install  --assume-yes --force-yes python-lxml python-yaml python-numpy python-setuptools
  # probably python on the path return a python interpreter and the find_package(PythonInterp) in CMake another,
  # let's install both debian packages and pip packages to be sure
  - sudo pip install lxml numpy pyyaml catkin_pkg
  # install urdf_parser_py and save the last commit SHA1 hash
  - git clone $URDF_PARSER_PY_REPOSITORY_URL
  - cd urdf_parser_py
  # workaround for https://github.com/robotology/simmechanics-to-urdf/issues/36
  - git checkout 31474b9baaf7c3845b40e5a9aa87d5900a2282c3 
  - export URDF_PARSER_PY_COMMIT=`git rev-parse HEAD`
  - sudo python setup.py install
  - cd ../
  # install simmechanics-to-urdf and save the last commit SHA1 hash
  - git clone $SIMMECHANICS_TO_URDF_REPOSITORY_URL
  - cd simmechanics-to-urdf
  - export SIMMECHANICS_TO_URDF_COMMIT=`git rev-parse HEAD`
  - sudo python setup.py install
  - cd ../
  # copy output folders and add the environment variable
  - git clone https://$DEPLOYMENT_REPOSITORY_TOKEN
  - cd icub-models
  - export ICUB_MODELS_SOURCE_DIR=`pwd`
  - cd ../
  # get C++ dependencies and save their last commit SHA1 hash
  ## yarp
  - git clone https://github.com/robotology/yarp.git
  - cd yarp
  - export YARP_COMMIT=`git rev-parse HEAD`
  - mkdir build
  - cd build
  - cmake -DCREATE_LIB_MATH:BOOL=ON ..
  - sudo cmake --build . --target install
  - cd ../..
  ## icub-main
  - git clone https://github.com/robotology/icub-main.git
  - cd icub-main
  - export ICUB_MAIN_COMMIT=`git rev-parse HEAD`
  - mkdir build
  - cd build
  - cmake ..
  - sudo cmake --build . --target install
  - cd ../..
  ## idyntree
  - git clone https://github.com/robotology/idyntree.git
  - cd idyntree
  - git checkout devel
  - export IDYNTREE_COMMIT=`git rev-parse HEAD`
  - mkdir build
  - cd build
  - cmake -DIDYNTREE_USES_KDL:BOOL=ON ..
  - sudo cmake --build . --target install
  - cd ../..
  # ycm 
  - git clone https://github.com/robotology/ycm.git
  - cd ycm
  - mkdir build
  - cd build
  - cmake ..
  - sudo cmake --build . --target install
  - cd ../..
  # Install sdformat
  - sudo sh -c 'echo "deb http://packages.osrfoundation.org/gazebo/ubuntu bionic main" > /etc/apt/sources.list.d/gazebo-latest.list'
  - wget http://packages.osrfoundation.org/gazebo.key -O - | sudo apt-key add -
  - sudo apt-get update
  - sudo apt-get install --assume-yes --force-yes libsdformat6-dev
  # Prepare icub-model-generator build
  - cd icub-model-generator
  - mkdir build
  - cd build
  - cmake -D ICUB_MODELS_SOURCE_DIR=$ICUB_MODELS_SOURCE_DIR  ..

script:
  - make VERBOSE=1 
  - sudo cmake --build .
  - ctest --output-on-failure
  - sudo cmake --build . --target copy-models-to-icub-models

after_success:
# IF the build was triggered by a valid `repository url` on a valid `branch`, THEN commit the new models to the `deployment` repository
  - if [[ $TRAVIS_BRANCH == $TRIGGERING_BRANCH_VALID_FOR_DEPLOYMENT && $CURRENT_REPOSITORY_URL == $TRIGGERING_REPOSITORY_URL_VALID_FOR_DEPLOYMENT && $TRAVIS_EVENT_TYPE == push ]]; then
      cd $ICUB_MODELS_SOURCE_DIR;
      git remote rm origin;
      git remote add origin https://$BOT_USER_NAME:$BOT_TOKEN@$DEPLOYMENT_REPOSITORY_TOKEN;
      git add --all;
      git commit -a -m "Automatic build. Travis build:$TRAVIS_BUILD_NUMBER" -m "icub-model-generator commit:$TRAVIS_COMMIT"
      -m "urdf_parser_py commit:$URDF_PARSER_PY_COMMIT" -m "simmechanics-to-urdf commit:$SIMMECHANICS_TO_URDF_COMMIT"
      -m "yarp commit:$YARP_COMMIT" -m "icub-main commit:$ICUB_MAIN_COMMIT" -m "idyntree commit:$IDYNTREE_COMMIT" --author "$COMMIT_AUTHOR";
      git push --set-upstream --quiet origin master;
    fi

notifications:
  email:
    - pegua1@gmail.com
